// Application variables for use in any component .scss file
// To use (for example, from `src/components/Header/header.scss`):
// @import '../../vars';

// Ensure that the relative path (i.e. `../../`, etc.) is correct when importing from a nested
// component.

// For use in a .js file, see `src/theme.js`.

$dark: false;

$primary-blue: #014983;
$primary-cyan: #00aeef;
$secondary-green: #b2bb1c;
$secondary-yellow: #fdb913;
$secondary-orange: #de571f;
$secondary-red: #b53228;

$alternative-red: #ff0000;

$neutral-white: #ffffff;

//if-else evaluated at runtime, so variables must be defined first, leads to some weird loading
//behavior in dark mode currently.
$neutral-white-opacity80: #ffffffcd;
$neutral-white-opacity50: #ffffff80;
$neutral-white-opacity30: #ffffff4d;
$neutral-light-gray: #ebeaea;
$neutral-light-gray2: #dddddd;
$neutral-gray2: #cccccb;
$neutral-gray3: #adadad;
$neutral-dark-gray: #31342b;
$neutral-dark-gray2: #444444;
$neutral-dark-gray3: #555555;
$neutral-gray: #808080;

$neutral-black: #000000;
$neutral-black-opacity90: #000000e6;
$neutral-black-opacity55: #0000008c;
$neutral-black-opacity40: #00000066;
$neutral-black-opacity20: #00000033;
$neutral-black-opacity15: #00000026;
$neutral-black-opacity125: #00000020;
$neutral-black-opacity10: #0000001a;

$dark-text-color: rgba(0, 0, 0, 0.87);

@if $dark {
  $primary-blue: #00aeef;
  $primary-cyan: #014983;
  $neutral-white: #000000;
  $neutral-white-opacity80: #000000cd;
  $neutral-white-opacity50: #00000080;
  $neutral-white-opacity30: #0000004d;
  $neutral-light-gray: #1e1e1e;
  $neutral-light-gray2: #353535;
  $neutral-gray2: #484848;
  $neutral-gray3: #606060;
  $neutral-dark-gray: #d1d8c4;
  $neutral-dark-gray2: #c3c3c3;
  $neutral-dark-gray3: #b3b3b3;
  $neutral-gray: #808080;

  $neutral-black: #ffffff;
  $neutral-black-opacity90: #ffffffe6;
  $neutral-black-opacity55: #ffffff8c;
  $neutral-black-opacity40: #ffffff66;
  $neutral-black-opacity20: #ffffff33;
  $neutral-black-opacity15: #ffffff26;
  $neutral-black-opacity125: #ffffff20;
  $neutral-black-opacity10: #ffffff1a;

  $dark-text-color: rgba(255, 255, 255, 0.87);
} @else {
  $primary-blue: #014983;
  $primary-cyan: #00aeef;
  $neutral-white-opacity80: #ffffffcd;
  $neutral-white-opacity50: #ffffff80;
  $neutral-white-opacity30: #ffffff4d;
  $neutral-light-gray: #ebeaea;
  $neutral-light-gray2: #dddddd;
  $neutral-gray2: #cccccb;
  $neutral-gray3: #adadad;
  $neutral-dark-gray: #31342b;
  $neutral-dark-gray2: #444444;
  $neutral-dark-gray3: #555555;
  $neutral-gray: #808080;

  $neutral-black: #000000;
  $neutral-black-opacity90: #000000e6;
  $neutral-black-opacity55: #0000008c;
  $neutral-black-opacity40: #00000066;
  $neutral-black-opacity20: #00000033;
  $neutral-black-opacity15: #00000026;
  $neutral-black-opacity125: #00000020;
  $neutral-black-opacity10: #0000001a;

  $dark-text-color: rgba(0, 0, 0, 0.87);
}

//attempted to switch to dark mode dynamically using a media query, but this doesn't work since
//sass scripts are precompiled into css.  Need to figure out an alternate solution to doing this
//dynamically.

$dark-theme: 'dark-theme';
$light-theme: 'light-theme';

// $neutral-white-opacity80: #ffffffcd;
// $neutral-white-opacity50: #ffffff80;
// $neutral-white-opacity30: #ffffff4d;
// $neutral-light-gray: #ebeaea;
// $neutral-light-gray2: #dddddd;
// $neutral-gray2: #cccccb;
// $neutral-gray3: #adadad;
// $neutral-dark-gray: #31342b;
// $neutral-dark-gray2: #444444;
// $neutral-dark-gray3: #555555;

// @media (prefers-color-scheme: dark) {
//   $neutral-white-opacity80: #000000cd;
//   $neutral-white-opacity50: #00000080;
//   $neutral-white-opacity30: #0000004d;
//   $neutral-light-gray: #1e1e1e;
//   $neutral-light-gray2: #353535;
//   $neutral-gray2: #484848;
//   $neutral-gray3: #606060;
//   $neutral-dark-gray: #d1d8c4;
//   $neutral-dark-gray2: #c3c3c3;
//   $neutral-dark-gray3: #b3b3b3;
// }

$wellness-red: #a30000;
$wellness-green: #005500;
$wellness-yellow: #ffcc00;

// Material-UI breakpoints as Sass variables for use in custom styles
$break-xs: 360px;
$break-sm: 600px;
$break-md: 900px;
$break-lg: 1200px;
$break-xl: 1536px;

$header-height-xs: 56px;
$header-height-sm: 64px;
$header-height-md: 72px;
