@use 'sass:color';
@import '../../../../vars';

.quick_search {
  width: inherit;
}

.root {
  align-self: flex-end;
  color: inherit;
  transition: box-shadow 0.3s, width 0.3s;
  border-radius: 4px;
  border: 1px solid $neutral-white;
  border-color: inherit;
  padding: 2px 10px;
  max-width: 15rem;
  &:focus-within {
    box-shadow: 0 3px 10px 0 $neutral-black-opacity20;
    max-width: 15rem;
  }
  &:hover:not(:focus-within) {
    box-shadow: 0 3px 5px 0 $neutral-black-opacity20;
  }

  & :global(.MuiInputBase-input) {
    padding: 7px 0px;
  }
}

.dropdown {
  position: absolute;
  max-height: 60vh;
  width: inherit;
  // max-width: 15rem;
  overflow-y: auto; // make this to scroll
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
  border-radius: 4px;
  z-index: 10;
}

.matched_text {
  text-decoration: none;
  padding-bottom: 1px;
  border-bottom: 2px solid $primary-cyan;
  background-color: color.adjust($color: $primary-cyan, $alpha: -0.9);
}

.suggestion_selected {
  background-color: $neutral-light-gray;
}

.suggestion,
.suggestion_selected {
  display: block;
  text-align: start;
  white-space: normal; // wrap long names
}

.suggestion_selected:hover {
  background-color: $neutral-light-gray !important;
}

.dropdown:hover .suggestion_selected {
  background-color: $neutral-white;
}

// .loading is shown first. After 350ms, .loading opacity and font-size go to 0. This is done
// to give space for .no-results to increase in font size and change to normal opacity.
.no_results {
  font-style: italic;
  color: gray;
  animation: show-no-results 1500ms;
}

@keyframes show-no-results {
  0% {
    font-size: 0;
    opacity: 0;
  }
  99% {
    font-size: 0;
    opacity: 0;
  }
  100% {
    font-size: 90%;
    opacity: 1;
  }
}

.loading {
  font-size: 0;
  opacity: 0;
  font-style: italic;
  color: gray;
  animation: show-loading 1500ms;
}

@keyframes show-loading {
  0% {
    font-size: 90%;
    opacity: 1;
  }
  99% {
    font-size: 90%;
    opacity: 1;
  }
  100% {
    font-size: 0;
    opacity: 0;
  }
}

@media (min-width: $break-sm) {
  .root {
    align-self: flex-end;
  }
}

:global(hr.MuiDivider-root).suggestion_divider {
  margin: 0px;
}
